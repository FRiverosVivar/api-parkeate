AWSTemplateFormatVersion: '2010-09-09'
Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: ParkeateMultiFunctionLambdaPipeline
      RoleArn: arn:aws:iam::175445123792:role/AWSCodePipelineServiceRole
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: parkeate-lambda-functions
                BranchName: main
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: BuildFunction1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: BuildFunction1
                PrimarySource: SourceArtifact
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifactFunction1
            - Name: BuildFunction2
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: BuildFunction2
                PrimarySource: SourceArtifact
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifactFunction2
        - Name: Deploy
          Actions:
            - Name: DeployFunction1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                StackName: LambdaDockerStackFunction1
                Capabilities: CAPABILITY_IAM
                TemplatePath: BuildArtifactFunction1::template.yaml
              InputArtifacts:
                - Name: BuildArtifactFunction1
            - Name: DeployFunction2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                StackName: LambdaDockerStackFunction2
                Capabilities: CAPABILITY_IAM
                TemplatePath: BuildArtifactFunction2::template.yaml
              InputArtifacts:
                - Name: BuildArtifactFunction2

  BuildProjectFunction1:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: BuildFunction1
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      ServiceRole: arn:aws:iam::<your-account-id>:role/CodeBuildServiceRole
      BuildSpec: |
        version: 0.2
        phases:
          install:
            runtime-versions:
              docker: 19
          pre_build:
            commands:
              - echo Pre-build phase: Detect changes
              - if [ -z "$(git diff --name-only HEAD~1 HEAD | grep '^lambda-functions/function-1/')" ]; then echo 'No changes in function-1, skipping build'; exit 0; fi
          build:
            commands:
              - echo Build started on `date`
              - cd lambda-functions/function-1
              - docker build -t function-1 .
              - docker tag function-1:latest <your-account-id>.dkr.ecr.<your-region>.amazonaws.com/function-1:latest
              - $(aws ecr get-login-password --region <your-region> | docker login --username AWS --password-stdin <your-account-id>.dkr.ecr.<your-region>.amazonaws.com)
              - docker push <your-account-id>.dkr.ecr.<your-region>.amazonaws.com/function-1:latest
        artifacts:
          files:
            - '**/*'

  BuildProjectFunction2:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: BuildFunction2
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      ServiceRole: arn:aws:iam::<your-account-id>:role/CodeBuildServiceRole
      BuildSpec: |
        version: 0.2
        phases:
          install:
            runtime-versions:
              docker: 19
          pre_build:
            commands:
              - echo Pre-build phase: Detect changes
              - if [ -z "$(git diff --name-only HEAD~1 HEAD | grep '^lambda-functions/function-2/')" ]; then echo 'No changes in function-2, skipping build'; exit 0; fi
          build:
            commands:
              - echo Build started on `date`
              - cd lambda-functions/function-2
              - docker build -t function-2 .
              - docker tag function-2:latest <your-account-id>.dkr.ecr.<your-region>.amazonaws.com/function-2:latest
              - $(aws ecr get-login-password --region <your-region> | docker login --username AWS --password-stdin <your-account-id>.dkr.ecr.<your-region>.amazonaws.com)
              - docker push <your-account-id>.dkr.ecr.<your-region>.amazonaws.com/function-2:latest
        artifacts:
          files:
            - '**/*'

  ECRRepositoryFunction1:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: function-1

  ECRRepositoryFunction2:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: function-2
