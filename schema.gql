# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserEntity {
  """type of the user"""
  userType: UserTypesEnum!

  """validated email"""
  validatedEmail: Boolean!

  """validated phone"""
  validatedPhone: Boolean!
}

enum UserTypesEnum {
  ROOT
  ADMIN
  ROOT_MANAGER
  MANAGER
  USER
}

type ClientEntity {
  validatedAccount: Boolean!
}

type UserLoginResponse {
  user: UserEntity!
  access_token: String!
}

type ClientLoginResponse {
  client: ClientEntity!
  access_token: String!
}

type HoldingEntity {
  """creation date of the user"""
  parkingList: String!
}

type Query {
  users: [UserEntity!]!
  userById(userId: String!): UserEntity!
  userByRut(rut: String!): UserEntity!
  getUserEmailCode(userId: String!): UserEntity!
  getUserSMSCode(userId: String!): UserEntity!
  clientById(clientId: String!): ClientEntity!
  clients: [ClientEntity!]!
  clientByRut(rut: String!): ClientEntity!
  getClientEmailCode(clientId: String!): ClientEntity!
  getClientSMSCode(clientId: String!): ClientEntity!
  getAllHoldings: [HoldingEntity!]!
  getHoldingById(holdingId: String!): HoldingEntity!
}

type Mutation {
  uploadFile(createFileInput: CreateFileInput!, file: Upload!): String!
  deleteFile(url: String!): Boolean!
  createUser(createUserInput: CreateUserInput!): UserEntity!
  createClient(createClientInput: CreateClientInput!): UserEntity!
  clientLogin(loginClientInput: LoginClientInput!): UserLoginResponse!
  login(loginUserInput: LoginUserInput!): UserLoginResponse!
  refreshToken(accessToken: String!): UserLoginResponse!
  refreshClientToken(accessToken: String!): ClientLoginResponse!
  updateUser(updateUserInput: UpdateUserInput!): UserEntity!
  setProfilePhoto(userId: String!, photoInput: CreatePhotoInput!, photo: Upload!): UserEntity!
  removeUser(userId: String!): UserEntity!
  updateClient(updateClientInput: UpdateClientInput!): ClientEntity!
  setClientProfilePhoto(clientId: String!, photoInput: CreatePhotoInput!, photo: Upload!): ClientEntity!
  removeClient(clientId: String!): ClientEntity!
  updateHolding(updateHoldingInput: UpdateHoldingInput!): HoldingEntity!
  setHoldingPhoto(holdingId: String!, photoInput: CreatePhotoInput!, photo: Upload!): HoldingEntity!
  removeHolding(holdingId: String!): UserEntity!
}

input CreateFileInput {
  userId: String!
  ratio: RatioEnum
}

enum RatioEnum {
  SQUARE
  MODERN
  MODERN_PORTRAIT
  OLD
  OLD_PORTRAIT
  BANNER
  ULTRA_WIDE
  SUPER_WIDE
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateUserInput {
  """type of the user"""
  userType: Int!

  """validated email"""
  validatedEmail: Boolean!

  """validated phone"""
  validatedPhone: Boolean!
}

input CreateClientInput {
  validatedAccount: Boolean!
}

input LoginClientInput {
  """rut of the user"""
  username: String!

  """pw of the user"""
  password: String!
}

input LoginUserInput {
  """rut of the user"""
  username: String!

  """pw of the user"""
  password: String!
}

input UpdateUserInput {
  """type of the user"""
  userType: Int

  """validated email"""
  validatedEmail: Boolean

  """validated phone"""
  validatedPhone: Boolean
  id: String!
}

input CreatePhotoInput {
  id: String!
  url: String
  name: String
  creatorId: String
}

input UpdateClientInput {
  validatedAccount: Boolean
  id: String!
}

input UpdateHoldingInput {
  """creation date of the user"""
  parkingList: String
  id: String!
}